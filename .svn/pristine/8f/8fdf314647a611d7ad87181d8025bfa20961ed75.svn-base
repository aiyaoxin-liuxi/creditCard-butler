package com.zhl.card.controller.callback;

import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.lang.StringUtils;
import org.pub.util.uuid.KeySn;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.zhl.card.controller.common.BaseController;
import com.zhl.card.pojo.EmailInfo;
import com.zhl.card.pojo.common.ResponseEntity;
import com.zhl.card.pojo.enums.common.ReturnCode;
import com.zhl.card.service.IEmailInfoService;

@Controller
@RequestMapping(value = "/callBackEmail")
public class CallBackEmailController extends BaseController {

    private Logger logs = LoggerFactory.getLogger(CallBackEmailController.class);

    @Resource
    private IEmailInfoService emailInfoService;

    /**
     * 邮箱回调接口
     * @param cardInfo
     * @return
     */
    @RequestMapping(value = "/getCallBack")
    @ResponseBody
    public Object getCallBack(String ybId) {

        ResponseEntity resEntity = new ResponseEntity();
        String keySn = KeySn.getKey();
        logs.info("邮箱异步回调...开始--->keySn = " + keySn + ",ybId = " + ybId);
        
        String check = checkGetCallBack(ybId);
        if(null != check){
            resEntity.setResponseEntity(keySn, ReturnCode.DATA_VALID_FAIL_200000.getName(), ReturnCode.DATA_VALID_FAIL_200000.getName() + check);
            logs.info("邮箱异步回调...结束--->resEntity = " + resEntity);
            return resEntity;
        }
        EmailInfo emailInfo = emailInfoService.queryEmailByybId(ybId);
        if(null == emailInfo){
            resEntity.setResponseEntity(keySn, ReturnCode.EMAIL_NOT_FIND_111114.getName(), ReturnCode.EMAIL_NOT_FIND_111114.getName());
            logs.debug("获取邮箱信息...结束--->resEntity = " + resEntity);
            return resEntity;
        }
        emailInfo.getToken();
        
        // 调用接口查询结果
        
        
        // 返回参数入库
        
        
        
        
        
        logs.debug("邮箱异步回调...结束--->resEntity = " + resEntity);
        
        return resEntity;
    }
    
    // =========================check==================

    /**
     * 回调返回值
     * @param cid
     * @return
     */
    private String checkGetCallBack(String ybId){
        if(StringUtils.isBlank(ybId)){
            return "回调参数ybId为空";
        }
        return null;
    }

}
