package com.zhl.card.service.impl;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.pub.util.uuid.KeySn;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import com.zhl.card.dao.ICardInfoDao;
import com.zhl.card.pojo.CardInfo;
import com.zhl.card.pojo.enums.CardInfo.BindState;
import com.zhl.card.pojo.enums.CardInfo.State;
import com.zhl.card.pojo.enums.CardInfo.Type;
import com.zhl.card.pojo.enums.common.IsDel;
import com.zhl.card.service.ICardInfoService;

@Service("cardInfoService")
public class CardInfoService implements ICardInfoService {
	
    private Logger logs = LoggerFactory.getLogger(CardInfoService.class);
    
    @Resource
    private ICardInfoDao cardInfoDao;

    @Override
    public List<CardInfo> getCardByUserIdAndCardNo(CardInfo cardInfo) {
        Map<String, Object> paramMap = new HashMap<String, Object>();
        paramMap.put("userId", cardInfo.getUserId());
        paramMap.put("cardNo", cardInfo.getCardNo());
        paramMap.put("idDel", IsDel.CODE00.getCode());
        return cardInfoDao.queryCardInfoCondition2List(paramMap);
    }
    
    @Override
    public List<CardInfo> getCardByUserId(String userId) {
        Map<String, Object> paramMap = new HashMap<String, Object>();
        paramMap.put("userId", userId);
        paramMap.put("idDel", IsDel.CODE00.getCode());
        return cardInfoDao.queryCardInfoCondition2List(paramMap);
    }
    
    @Override
    public int insetCardInfo(CardInfo cardInfo) {
        Date now = new Date();
        cardInfo.setId(KeySn.getKey());
        cardInfo.setBindDate(now);
        cardInfo.setCreateDate(now);
        cardInfo.setBindState(BindState.CODE00.getCode());
        cardInfo.setType(Type.CODE00.getCode());
        cardInfo.setState(State.CODE00.getCode());
        cardInfo.setBindState(BindState.CODE00.getCode());
        cardInfo.setIsDel(IsDel.CODE00.getCode());
        return cardInfoDao.insertCardInfo(cardInfo);
    }

}
